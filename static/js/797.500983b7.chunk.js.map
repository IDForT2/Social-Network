{"version":3,"file":"static/js/797.500983b7.chunk.js","mappings":"qMAyBMA,GAAiBC,EAAAA,EAAAA,GAAW,CAC9BC,KAAM,SADaD,EAhBL,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAaC,EAAW,EAAXA,MAC7B,OACI,kBAAMC,SAAUF,EAAhB,WACKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,cAC9DH,EAAAA,EAAAA,IAAY,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,eAC/DL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SACLP,KAEL,0BACI,0CAIf,IAyBD,WAAeQ,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OADC,GAIgB,CAACE,MAAAA,EAAAA,IAAzC,EAnBc,SAACC,GAKX,OAAGA,EAAMH,QACE,SAAC,KAAD,CAAUI,GAAI,cAGlB,4BACH,mCACA,SAAClB,EAAD,CAAgBK,SAVH,SAACc,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAC3D,MAUJ,G,4NCtCKC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAStB,EAAsB,EAAtBA,MAAQuB,EAAc,EAAdA,SAC3CC,EAAWF,GAAWtB,EAE5B,OACI,iBAAKM,UAAWmB,EAAAA,EAAAA,YAAqB,KAAOD,EAAWC,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKF,IAEJC,IAAY,gCAAQxB,EAAR,SAGxB,EAEY0B,EAAW,SAACb,GACrB,IAAOO,EAAoCP,EAApCO,MAAuBO,GAAad,EAA7BQ,KAA6BR,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,uCAAcO,GAAWO,MAC3D,EAEYvB,EAAQ,SAACS,GAClB,IAAOO,EAAoCP,EAApCO,MAAuBO,GAAad,EAA7BQ,KAA6BR,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACM,GAAD,kBAAiBN,GAAjB,cAAwB,oCAAWO,GAAWO,MACxD,EAEYzB,EAAc,SAAC2B,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CnB,EAA3C,uDAAmD,CAAC,EAAGoB,EAAvD,uDAA8D,GAA9D,OACvB,4BACI,SAAC,KAAD,QAAOJ,YAAaA,EAAaC,KAAMA,EAChCI,SAAUH,EACVC,UAAWA,GACPnB,IAJf,IAKQoB,IANe,C,8EC3BpB,IAAM9B,EAAW,SAAAgC,GACpB,IAAIA,EACJ,MAAO,mBAEV,EAEaC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC7C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,WAE1C,CAHgC,C,oBCLjC,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,uC","sources":["components/Login/Login.jsx","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControl/FormControls.module.css?3b27"],"sourcesContent":["import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport classes from \"./../common/FormsControl/FormControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={classes.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({\r\n    form: 'login'\r\n}) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Navigate to={\"/profile\"}/>;\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import styles from './FormControls.module.css'\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\nexport  const maxLengthCreator = (MaxLength) => (value) => {\r\n    if (value && value.length > MaxLength) return `Max length is ${MaxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__yPjIz\",\"error\":\"FormControls_error__gsuWj\",\"formSummaryError\":\"FormControls_formSummaryError__2XlSp\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","classes","connect","state","isAuth","auth","login","props","to","formData","email","password","rememberMe","FormControl","input","meta","touched","children","hasError","styles","TextArea","restProps","child","placeholder","name","validators","component","text","validate","value","maxLengthCreator","MaxLength","length"],"sourceRoot":""}