{"version":3,"file":"static/js/526.2c3e06e5.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Messege.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControl/FormControls.module.css?3b27"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__H--Wh\",\"dialogsItems\":\"Dialogs_dialogsItems__5reTD\",\"messages\":\"Dialogs_messages__nhstR\",\"dialog\":\"Dialogs_dialog__w940p\",\"textarea\":\"Dialogs_textarea__weQB4\"};","import classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.img}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import classes from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.dialog}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMassageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[required, maxLength100]} name=\"newMessageBody\" placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMassageReduxForm = reduxForm({\r\n    form: 'dialogAddMassageForm'\r\n})(AddMassageForm);\r\n\r\nexport default AddMassageReduxForm","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Messege\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMassageReduxForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} img={d.img}/>);\r\n\r\n    let messagesElements = props.messages.map(m => <Message message={m.message}/>)\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>;\r\n\r\n    return (<div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div> {messagesElements} </div>\r\n            </div>\r\n            <AddMassageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)return <Navigate to={\"/login\"}/>;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import styles from './FormControls.module.css'\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\nexport  const maxLengthCreator = (MaxLength) => (value) => {\r\n    if (value && value.length > MaxLength) return `Max length is ${MaxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__yPjIz\",\"error\":\"FormControls_error__gsuWj\",\"formSummaryError\":\"FormControls_formSummaryError__2XlSp\"};"],"names":["props","path","id","className","classes","src","img","to","name","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","addMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dialogsPage","newMessageText","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","Dialogs","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","value","MaxLength","length"],"sourceRoot":""}