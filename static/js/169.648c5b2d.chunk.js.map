{"version":3,"file":"static/js/169.648c5b2d.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControl/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControl/FormControls.module.css?3b27"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__cIUlO\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                           value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__560V9\",\"posts\":\"MyPosts_posts__uqkCo\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Post_content__Zl1Ix\",\"item\":\"Post_item__KhiXX\"};","import classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://cdn-icons-png.flaticon.com/512/147/147144.png'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likes_count}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControl/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map((post, index) => <Post message={post.message} likes_count={post.likesCount}\r\n                                               key={index}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet maxLength = maxLengthCreator(50)\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newPostBody\" placeholder='Enter new post' validate={[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>New Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'AddPostForm'\r\n})(AddPostForm);\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport {newPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(newPostCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children){\r\n    return(props)=>{\r\n\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match = {match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import styles from './FormControls.module.css'\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n\r\n}\r\n\r\nexport  const maxLengthCreator = (MaxLength) => (value) => {\r\n    if (value && value.length > MaxLength) return `Max length is ${MaxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__yPjIz\",\"error\":\"FormControls_error__gsuWj\",\"formSummaryError\":\"FormControls_formSummaryError__2XlSp\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","classes","src","photos","large","Preloader","message","likes_count","MyPosts","React","postsElements","posts","reverse","map","post","index","likesCount","AddPostReduxForm","onSubmit","values","addPost","newPostBody","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","connect","state","profilePage","newPostText","dispatch","newPostCreator","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","getUserProfile","compose","auth","isAuth","getStatus","FormControl","input","meta","touched","error","children","hasError","styles","restProps","child","Input","createField","validators","text","MaxLength","length"],"sourceRoot":""}